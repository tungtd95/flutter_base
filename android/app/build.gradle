def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
  compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.sekiroflutter"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        debug {
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_PASSWORD
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
        publish {
            storeFile file(PUBLISH_STORE_FILE)
            storePassword PUBLISH_STORE_PASSWORD
            keyAlias PUBLISH_KEY_ALIAS
            keyPassword PUBLISH_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "app"

    productFlavors {
        dev {
            dimension "app"
            applicationId "com.sekiroflutter.weather_dev"
            resValue "string", "app_name", "Weather Dev"
            signingConfig signingConfigs.debug
        }
        prod {
            dimension "app"
            applicationId "com.sekiroflutter.weather"
            resValue "string", "app_name", "Weather"
            signingConfig signingConfigs.release
        }
        publish {
            dimension "app"
            applicationId "com.sekiroflutter.weather"
            resValue "string", "app_name", "Weather"
            signingConfig signingConfigs.publish
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

    buildTypes {
        debug {}
        release {}
    }


    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def formattedDate = new Date().format('yyyyMMddHHmm')
            def buildType = variant.getFlavorName()
            outputFileName = "sekiro-" + android.defaultConfig.versionName + "-" + buildType + "-" + formattedDate + ".apk"
        }
    }

    android {
        lintOptions {
            checkReleaseBuilds false
        }
        ndkVersion "25.1.8937393"
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.installreferrer:installreferrer:2.2'
}
